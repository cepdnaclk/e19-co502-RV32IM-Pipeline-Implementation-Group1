$date
	Sun May 11 15:08:19 2025
$end
$version
	Icarus Verilog
$end
$timescale
	100ps
$end
$scope module cpu_tb $end
$var wire 32 ! PC [31:0] $end
$var wire 32 " INST [31:0] $end
$var wire 3 # DMEM_WRITE [2:0] $end
$var wire 4 $ DMEM_READ [3:0] $end
$var wire 32 % DMEM_DATA_WRITE [31:0] $end
$var wire 32 & DMEM_DATA_READ [31:0] $end
$var wire 32 ' DMEM_ADDR [31:0] $end
$var wire 1 ( BUSYWAIT $end
$var reg 1 ) CLK $end
$var reg 1 * RST $end
$scope module cpu_inst $end
$var wire 1 + BUSYWAIT $end
$var wire 1 , BUSYWAIT_OUT $end
$var wire 1 ) CLK $end
$var wire 32 - DMEM_ADDR_MA [31:0] $end
$var wire 32 . DMEM_DATA_WRITE_MA [31:0] $end
$var wire 4 / DMEM_READ_MA [3:0] $end
$var wire 3 0 DMEM_WRITE_MA [2:0] $end
$var wire 32 1 NEXT_PC_EX [31:0] $end
$var wire 1 * RST $end
$var wire 1 2 WRITE_EN_WB $end
$var wire 1 3 WRITE_EN_MA $end
$var wire 1 4 WRITE_EN_ID $end
$var wire 1 5 WRITE_EN_EX $end
$var wire 32 6 WRITE_DATA_WB [31:0] $end
$var wire 2 7 WB_SEL_WB [1:0] $end
$var wire 2 8 WB_SEL_MA [1:0] $end
$var wire 2 9 WB_SEL_ID [1:0] $end
$var wire 2 : WB_SEL_EX [1:0] $end
$var wire 5 ; WADDR_WB [4:0] $end
$var wire 5 < WADDR_MA [4:0] $end
$var wire 5 = WADDR_EX [4:0] $end
$var wire 32 > PC_WB [31:0] $end
$var wire 32 ? PC_PLUS_4_MA [31:0] $end
$var wire 32 @ PC_PLUS_4_IF [31:0] $end
$var wire 1 A PC_MUX_SEL_EX $end
$var wire 32 B PC_MA [31:0] $end
$var wire 32 C PC_INT_IF [31:0] $end
$var wire 32 D PC_IF [31:0] $end
$var wire 32 E PC_ID [31:0] $end
$var wire 32 F PC_EX [31:0] $end
$var wire 3 G MEM_WRITE_MA [2:0] $end
$var wire 3 H MEM_WRITE_ID [2:0] $end
$var wire 3 I MEM_WRITE_EX [2:0] $end
$var wire 4 J MEM_READ_MA [3:0] $end
$var wire 4 K MEM_READ_ID [3:0] $end
$var wire 4 L MEM_READ_EX [3:0] $end
$var wire 32 M INST_IF [31:0] $end
$var wire 32 N INST_ID [31:0] $end
$var wire 4 O IMM_SEL_ID [3:0] $end
$var wire 32 P IMM_ID [31:0] $end
$var wire 32 Q IMM_EX [31:0] $end
$var wire 1 R HAZARD_STALL $end
$var wire 1 S HAZARD_BUBBLE $end
$var wire 2 T FORWARDING_DATA2_SEL_ID [1:0] $end
$var wire 2 U FORWARDING_DATA2_SEL_EX [1:0] $end
$var wire 32 V FORWARDING_DATA2 [31:0] $end
$var wire 2 W FORWARDING_DATA1_SEL_ID [1:0] $end
$var wire 2 X FORWARDING_DATA1_SEL_EX [1:0] $end
$var wire 32 Y FORWARDING_DATA1 [31:0] $end
$var wire 32 Z DMEM_DATA_READ_WB [31:0] $end
$var wire 32 [ DMEM_DATA_READ_MA [31:0] $end
$var wire 32 \ DATA2_MA [31:0] $end
$var wire 32 ] DATA2_ID [31:0] $end
$var wire 32 ^ DATA2_EX [31:0] $end
$var wire 1 _ DATA2_ALU_SEL_ID $end
$var wire 1 ` DATA2_ALU_SEL_EX $end
$var wire 32 a DATA1_ID [31:0] $end
$var wire 32 b DATA1_EX [31:0] $end
$var wire 1 c DATA1_ALU_SEL_ID $end
$var wire 1 d DATA1_ALU_SEL_EX $end
$var wire 1 ( BUSYWAIT_IN $end
$var wire 4 e BRANCH_JUMP_ID [3:0] $end
$var wire 4 f BRANCH_JUMP_EX [3:0] $end
$var wire 32 g ALU_OUT_WB [31:0] $end
$var wire 32 h ALU_OUT_MA [31:0] $end
$var wire 32 i ALU_OUT_EX [31:0] $end
$var wire 5 j ALU_OP_ID [4:0] $end
$var wire 5 k ALU_OP_EX [4:0] $end
$var wire 32 l ALU_DATA2_EX [31:0] $end
$var wire 32 m ALU_DATA1_EX [31:0] $end
$scope module alu_inst $end
$var wire 32 n andData [31:0] $end
$var wire 32 o forwardData [31:0] $end
$var wire 32 p orData [31:0] $end
$var wire 32 q xorData [31:0] $end
$var wire 32 r subData [31:0] $end
$var wire 32 s srlData [31:0] $end
$var wire 32 t sraData [31:0] $end
$var wire 32 u sltuData [31:0] $end
$var wire 32 v sltData [31:0] $end
$var wire 32 w sllData [31:0] $end
$var wire 32 x remuData [31:0] $end
$var wire 32 y remData [31:0] $end
$var wire 32 z mulhuData [31:0] $end
$var wire 32 { mulhsuData [31:0] $end
$var wire 32 | mulhData [31:0] $end
$var wire 32 } mulData [31:0] $end
$var wire 32 ~ divuData [31:0] $end
$var wire 32 !" divData [31:0] $end
$var wire 32 "" addData [31:0] $end
$var wire 5 #" SELECT [4:0] $end
$var wire 32 $" DATA2 [31:0] $end
$var wire 32 %" DATA1 [31:0] $end
$var reg 32 &" RESULT [31:0] $end
$upscope $end
$scope module alu_mux_1 $end
$var wire 1 d sel $end
$var wire 32 '" out [31:0] $end
$var wire 32 (" data2 [31:0] $end
$var wire 32 )" data1 [31:0] $end
$upscope $end
$scope module alu_mux_2 $end
$var wire 1 ` sel $end
$var wire 32 *" out [31:0] $end
$var wire 32 +" data2 [31:0] $end
$var wire 32 ," data1 [31:0] $end
$upscope $end
$scope module branch_logic_inst $end
$var wire 4 -" op [3:0] $end
$var wire 32 ." data2 [31:0] $end
$var wire 32 /" data1 [31:0] $end
$var wire 1 0" BNE $end
$var wire 1 1" BLTU $end
$var wire 1 2" BLT $end
$var wire 1 3" BGEU $end
$var wire 1 4" BGE $end
$var wire 1 5" BEQ $end
$var reg 1 A out $end
$upscope $end
$scope module control_unit_inst $end
$var wire 1 c data1_alu_sel $end
$var wire 1 _ data2_alu_sel $end
$var wire 3 6" funct3 [2:0] $end
$var wire 1 7" funct3_mux_select $end
$var wire 7 8" funct7 [6:0] $end
$var wire 7 9" opcode [6:0] $end
$var wire 1 4 reg_write_en $end
$var wire 1 * reset $end
$var wire 2 :" wb_sel [1:0] $end
$var wire 3 ;" mem_write [2:0] $end
$var wire 4 <" mem_read [3:0] $end
$var wire 4 =" imm_sel [3:0] $end
$var wire 4 >" branch_jump [3:0] $end
$var wire 5 ?" alu_op [4:0] $end
$scope module funct3_mux $end
$var wire 3 @" data1 [2:0] $end
$var wire 3 A" data2 [2:0] $end
$var wire 1 7" sel $end
$var wire 3 B" out [2:0] $end
$upscope $end
$upscope $end
$scope module ex_mem_pipeline_reg_inst $end
$var wire 32 C" alu_result_in [31:0] $end
$var wire 1 + busywait $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 2 D" wb_sel_in [1:0] $end
$var wire 1 5 reg_write_in $end
$var wire 32 E" read_data2_in [31:0] $end
$var wire 32 F" pc_in [31:0] $end
$var wire 3 G" mem_write_in [2:0] $end
$var wire 4 H" mem_read_in [3:0] $end
$var wire 5 I" dest_addr_in [4:0] $end
$var reg 32 J" alu_result_out [31:0] $end
$var reg 5 K" dest_addr_out [4:0] $end
$var reg 4 L" mem_read_out [3:0] $end
$var reg 3 M" mem_write_out [2:0] $end
$var reg 32 N" pc_out [31:0] $end
$var reg 32 O" read_data2_out [31:0] $end
$var reg 1 3 reg_write_out $end
$var reg 2 P" wb_sel_out [1:0] $end
$upscope $end
$scope module forwarding_mux_1 $end
$var wire 32 Q" data2 [31:0] $end
$var wire 2 R" sel [1:0] $end
$var wire 32 S" out [31:0] $end
$var wire 32 T" data3 [31:0] $end
$var wire 32 U" data1 [31:0] $end
$upscope $end
$scope module forwarding_mux_2 $end
$var wire 32 V" data2 [31:0] $end
$var wire 2 W" sel [1:0] $end
$var wire 32 X" out [31:0] $end
$var wire 32 Y" data3 [31:0] $end
$var wire 32 Z" data1 [31:0] $end
$upscope $end
$scope module hazard_unit_inst $end
$var wire 5 [" addr1 [4:0] $end
$var wire 5 \" addr2 [4:0] $end
$var wire 1 ]" ex_memr $end
$var wire 1 ^" load_use_hazard $end
$var wire 1 _" mem_memr $end
$var wire 5 `" mem_rd [4:0] $end
$var wire 1 3 mem_we $end
$var wire 1 5 ex_we $end
$var wire 5 a" ex_rd [4:0] $end
$var reg 1 S bubble $end
$var reg 2 b" forwarding_data1sel [1:0] $end
$var reg 2 c" forwarding_data2sel [1:0] $end
$var reg 1 R stall $end
$upscope $end
$scope module id_ex_pipeline_reg_inst $end
$var wire 5 d" aluop_in [4:0] $end
$var wire 4 e" branch_jump_in [3:0] $end
$var wire 1 + busywait $end
$var wire 1 ) clk $end
$var wire 1 c data1_alu_sel_in $end
$var wire 2 f" data1sel_in [1:0] $end
$var wire 1 _ data2_alu_sel_in $end
$var wire 2 g" data2sel_in [1:0] $end
$var wire 5 h" dest_addr_in [4:0] $end
$var wire 4 i" mem_read_in [3:0] $end
$var wire 3 j" mem_write_in [2:0] $end
$var wire 1 4 reg_write_en_in $end
$var wire 1 k" rst $end
$var wire 2 l" wb_sel_in [1:0] $end
$var wire 32 m" read_data2_in [31:0] $end
$var wire 32 n" read_data1_in [31:0] $end
$var wire 32 o" pc_in [31:0] $end
$var wire 32 p" imm_in [31:0] $end
$var reg 5 q" aluop_out [4:0] $end
$var reg 4 r" branch_jump_out [3:0] $end
$var reg 1 d data1_alu_sel_out $end
$var reg 2 s" data1sel_out [1:0] $end
$var reg 1 ` data2_alu_sel_out $end
$var reg 2 t" data2sel_out [1:0] $end
$var reg 5 u" dest_addr_out [4:0] $end
$var reg 32 v" imm_out [31:0] $end
$var reg 4 w" mem_read_out [3:0] $end
$var reg 3 x" mem_write_out [2:0] $end
$var reg 32 y" pc_out [31:0] $end
$var reg 32 z" read_data1_out [31:0] $end
$var reg 32 {" read_data2_out [31:0] $end
$var reg 1 5 reg_write_en_out $end
$var reg 2 |" wb_sel_out [1:0] $end
$upscope $end
$scope module if_id_pipeline_reg_inst $end
$var wire 1 }" busywait $end
$var wire 1 ) clk $end
$var wire 1 ~" rst $end
$var wire 32 !# pc_in [31:0] $end
$var wire 32 "# instr_in [31:0] $end
$var reg 32 ## instr_out [31:0] $end
$var reg 32 $# pc_out [31:0] $end
$upscope $end
$scope module mem_wb_pipeline_reg_inst $end
$var wire 32 %# alu_result_in [31:0] $end
$var wire 1 + busywait $end
$var wire 1 ) clk $end
$var wire 5 &# dest_addr_in [4:0] $end
$var wire 32 '# pc_in [31:0] $end
$var wire 1 3 reg_write_in $end
$var wire 1 * rst $end
$var wire 2 (# wb_sel_in [1:0] $end
$var wire 32 )# mem_data_in [31:0] $end
$var reg 32 *# alu_result_out [31:0] $end
$var reg 5 +# dest_addr_out [4:0] $end
$var reg 32 ,# mem_data_out [31:0] $end
$var reg 32 -# pc_out [31:0] $end
$var reg 1 2 reg_write_out $end
$var reg 2 .# wb_sel_out [1:0] $end
$upscope $end
$scope module pc_inst $end
$var wire 1 /# busywait $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 32 0# pc_in [31:0] $end
$var reg 32 1# pc_out [31:0] $end
$upscope $end
$scope module pc_mux $end
$var wire 32 2# data2 [31:0] $end
$var wire 1 A sel $end
$var wire 32 3# out [31:0] $end
$var wire 32 4# data1 [31:0] $end
$upscope $end
$scope module pc_plus_4 $end
$var wire 32 5# data [31:0] $end
$var wire 32 6# out [31:0] $end
$upscope $end
$scope module pc_plus_4_ma $end
$var wire 32 7# data [31:0] $end
$var wire 32 8# out [31:0] $end
$upscope $end
$scope module reg_files_inst $end
$var wire 5 9# addr1 [4:0] $end
$var wire 5 :# addr2 [4:0] $end
$var wire 1 ) clk $end
$var wire 32 ;# data1 [31:0] $end
$var wire 32 <# data2 [31:0] $end
$var wire 1 * rst $end
$var wire 5 =# waddr [4:0] $end
$var wire 1 2 we $end
$var wire 32 ># wd [31:0] $end
$upscope $end
$scope module sign_extender_inst $end
$var wire 4 ?# imm_sel [3:0] $end
$var wire 32 @# inst [31:0] $end
$var wire 5 A# TYPE6 [4:0] $end
$var wire 12 B# TYPE5 [11:0] $end
$var wire 12 C# TYPE3 [11:0] $end
$var wire 20 D# TYPE1 [19:0] $end
$var reg 32 E# imm_ext [31:0] $end
$upscope $end
$scope module wb_mux $end
$var wire 32 F# data1 [31:0] $end
$var wire 32 G# data2 [31:0] $end
$var wire 32 H# data3 [31:0] $end
$var wire 2 I# sel [1:0] $end
$var wire 32 J# out [31:0] $end
$upscope $end
$upscope $end
$scope module dmem_inst $end
$var wire 32 K# address [31:0] $end
$var wire 1 ) clock $end
$var wire 4 L# read [3:0] $end
$var wire 1 * reset $end
$var wire 3 M# write [2:0] $end
$var wire 32 N# writedata [31:0] $end
$var reg 1 ( busywait $end
$var reg 1 O# readaccess $end
$var reg 32 P# readdata [31:0] $end
$var reg 1 Q# writeaccess $end
$var integer 32 R# i [31:0] $end
$upscope $end
$scope module imem_inst $end
$var wire 1 ) clk $end
$var wire 32 S# pc [31:0] $end
$var wire 1 * rst $end
$var reg 32 T# instr [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
bx T#
bx S#
b100000000 R#
0Q#
bx P#
0O#
bx N#
bx M#
bx L#
bx K#
bx J#
bx I#
bx H#
bx G#
bx F#
bx E#
bx D#
bx C#
bx B#
bx A#
bx @#
bx ?#
bx >#
bx =#
bx <#
bx ;#
bx :#
bx 9#
bx 8#
bx 7#
bx 6#
bx 5#
bx 4#
bx 3#
bz 2#
bx 1#
bx 0#
x/#
bx .#
bx -#
bx ,#
bx +#
bx *#
bx )#
bx (#
bx '#
bx &#
bx %#
bx $#
bx ##
bx "#
bx !#
1~"
x}"
bx |"
bx {"
bx z"
bx y"
bx x"
bx w"
bx v"
bx u"
bx t"
bx s"
bx r"
bx q"
bx p"
bx o"
bx n"
bx m"
bx l"
1k"
bx j"
bx i"
bx h"
bx g"
bx f"
bx e"
bx d"
bx c"
bx b"
bx a"
bx `"
x_"
x^"
x]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
bx V"
bx U"
bx T"
bx S"
bx R"
bx Q"
bx P"
bx O"
bx N"
bx M"
bx L"
bx K"
bx J"
bx I"
bx H"
bx G"
bx F"
bx E"
bx D"
bx C"
bx B"
b0 A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
x7"
bx 6"
x5"
x4"
x3"
x2"
x1"
x0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
bx w
bx v
bx u
bx t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
xd
xc
bx b
bx a
x`
x_
bx ^
bx ]
bx \
bx [
bx Z
bx Y
bx X
bx W
bx V
bx U
bx T
xS
xR
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
xA
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
x5
x4
x3
x2
bz 1
bx 0
bx /
bx .
bx -
z,
0+
1*
0)
0(
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#10
b0 i
b0 &"
b0 C"
b0x u
b0x v
#30
04
#50
b0 "
b0 M
b0 "#
b0 T#
1)
#60
0^"
0}"
0/#
b0 P
b0 p"
b0 E#
b0 D#
b0 C#
b0 B#
b0 A#
b0 h"
b0 \"
b0 ["
b0 8"
b0 6"
b0 @"
b0 9"
b0 :#
b0 9#
0]"
bx i
bx &"
bx C"
0_"
0R
0S
b0 T
b0 c"
b0 g"
b0 W
b0 b"
b0 f"
b0 !
b0 D
b0 !#
b0 1#
b0 5#
b0 S#
b0 N
b0 ##
b0 @#
b0 E
b0 o"
b0 $#
b0 U
b0 W"
b0 t"
b0 X
b0 R"
b0 s"
b0 :
b0 D"
b0 |"
b0 L
b0 H"
b0 w"
b0 f
b0 -"
b0 r"
b0 I
b0 G"
b0 x"
b0 k
b0 #"
b0 q"
b0 =
b0 I"
b0 a"
b0 u"
b0 Q
b0 +"
b0 v"
b0 ^
b0 Z"
b0 {"
b0 b
b0 U"
b0 z"
b0 F
b0 ("
b0 F"
b0 y"
0`
0d
05
b0 8
b0 P"
b0 (#
b0 $
b0 /
b0 L#
b0 J
b0 L"
b0 #
b0 0
b0 M#
b0 G
b0 M"
b0 %
b0 .
b0 N#
b0 \
b0 O"
b0 '
b0 -
b0 K#
b0 h
b0 J"
b0 Q"
b0 V"
b0 %#
b0 B
b0 N"
b0 '#
b0 7#
b0 <
b0 K"
b0 `"
b0 &#
03
b0 7
b0 .#
b0 I#
b0 ;
b0 +#
b0 =#
b0 g
b0 *#
b0 G#
b0 Z
b0 ,#
b0 F#
b0 >
b0 -#
b0 H#
02
#70
bx000 j
bx000 ?"
bx000 d"
b0 B"
b0 ]
b0 m"
b0 <#
b0 a
b0 n"
b0 ;#
13"
01"
14"
02"
00"
15"
b0 V
b0 ,"
b0 ."
b0 E"
b0 X"
b0 Y
b0 )"
b0 /"
b0 S"
b0 6
b0 T"
b0 Y"
b0 >#
b0 J#
b100 @
b100 4#
b100 6#
b100 ?
b100 8#
#80
b0 l
b0 $"
b0 *"
b0 m
b0 %"
b0 '"
07"
0A
#90
b100 C
b100 0#
b100 3#
b0 t
b0 s
b0 w
b0 u
b0 v
b0 n
b0 p
b0 q
b0 o
0_
b0xxx O
b0xxx ="
b0xxx ?#
0c
b0 e
b0 >"
b0 e"
b0 j
b0 ?"
b0 d"
b1 9
b1 :"
b1 l"
b0 H
b0 ;"
b0 j"
b0 K
b0 <"
b0 i"
#100
0k"
b0 i
b0 &"
b0 C"
0~"
b0 r
b0 ""
0)
0*
#110
b0 |
b0 {
b0 z
b0 x
b0 y
b0 ~
b0 !"
b0 }
#150
1)
#160
bx Z
bx ,#
bx F#
b1 :
b1 D"
b1 |"
#170
b100 !
b100 D
b100 !#
b100 1#
b100 5#
b100 S#
b10100000000000010010011 "
b10100000000000010010011 M
b10100000000000010010011 "#
b10100000000000010010011 T#
bx 6
bx T"
bx Y"
bx >#
bx J#
#180
b1000 @
b1000 4#
b1000 6#
#190
b1000 C
b1000 0#
b1000 3#
#200
0)
#250
1)
#260
b10100000000 D#
b101 C#
b1 B#
b101 A#
b1 h"
b101 \"
b10011 9"
b101 :#
b10100000000000010010011 N
b10100000000000010010011 ##
b10100000000000010010011 @#
b100 E
b100 o"
b100 $#
b1 8
b1 P"
b1 (#
#270
b1000 !
b1000 D
b1000 !#
b1000 1#
b1000 5#
b1000 S#
b101000000000000100010011 "
b101000000000000100010011 M
b101000000000000100010011 "#
b101000000000000100010011 T#
#280
b1100 @
b1100 4#
b1100 6#
#290
b101 P
b101 p"
b101 E#
b1100 C
b1100 0#
b1100 3#
b10 O
b10 ="
b10 ?#
1_
14
#300
0)
#350
1)
#360
b1010 P
b1010 p"
b1010 E#
b101000000000 D#
b1010 C#
b10 B#
b1010 A#
b10 h"
b1010 \"
b1010 :#
b1 7
b1 .#
b1 I#
b1 =
b1 I"
b1 a"
b1 u"
b101 Q
b101 +"
b101 v"
b100 F
b100 ("
b100 F"
b100 y"
1`
15
b101000000000000100010011 N
b101000000000000100010011 ##
b101000000000000100010011 @#
b1000 E
b1000 o"
b1000 $#
#370
b1100 !
b1100 D
b1100 !#
b1100 1#
b1100 5#
b1100 S#
b1000001000000110110011 "
b1000001000000110110011 M
b1000001000000110110011 "#
b1000001000000110110011 T#
b101 l
b101 $"
b101 *"
b0 6
b0 T"
b0 Y"
b0 >#
b0 J#
#380
b10000 @
b10000 4#
b10000 6#
b1 u
b1 v
b101 p
b101 q
b101 o
#390
b101 i
b101 &"
b101 C"
b10000 C
b10000 0#
b10000 3#
b11111111111111111111111111111011 r
b101 ""
#400
0)
#450
1)
#460
b10 W
b10 b"
b10 f"
b1 T
b1 c"
b1 g"
b10 P
b10 p"
b10 E#
b1000001000 D#
b10 C#
b11 B#
b10 A#
b11 h"
b10 \"
b1 ["
b110011 9"
b10 :#
b1 9#
b1000001000000110110011 N
b1000001000000110110011 ##
b1000001000000110110011 @#
b1100 E
b1100 o"
b1100 $#
b10 =
b10 I"
b10 a"
b10 u"
b1010 Q
b1010 +"
b1010 v"
b1000 F
b1000 ("
b1000 F"
b1000 y"
b101 '
b101 -
b101 K#
b101 h
b101 J"
b101 Q"
b101 V"
b101 %#
b100 B
b100 N"
b100 '#
b100 7#
b1 <
b1 K"
b1 `"
b1 &#
13
#470
b10000 !
b10000 D
b10000 !#
b10000 1#
b10000 5#
b10000 S#
b1100000010000000100011 "
b1100000010000000100011 M
b1100000010000000100011 "#
b1100000010000000100011 T#
b1010 l
b1010 $"
b1010 *"
b1000 ?
b1000 8#
#480
b10100 @
b10100 4#
b10100 6#
b1010 p
b1010 q
b1010 o
#490
b1010 i
b1010 &"
b1010 C"
b0 P
b0 p"
b0 E#
b10100 C
b10100 0#
b10100 3#
b11111111111111111111111111110110 r
b1010 ""
b0xxx O
b0xxx ="
b0xxx ?#
0_
#500
0)
#550
1)
#560
b1 T
b1 c"
b1 g"
b0 W
b0 b"
b0 f"
b1100000010 D#
b11 C#
b0 B#
b11 A#
b0 h"
b11 \"
b0 ["
b10 6"
b10 @"
b100011 9"
b11 :#
b0 9#
b1 ;
b1 +#
b1 =#
b101 g
b101 *#
b101 G#
b100 >
b100 -#
b100 H#
12
b1010 '
b1010 -
b1010 K#
b1010 h
b1010 J"
b1010 Q"
b1010 V"
b1010 %#
b1000 B
b1000 N"
b1000 '#
b1000 7#
b10 <
b10 K"
b10 `"
b10 &#
b1 U
b1 W"
b1 t"
b10 X
b10 R"
b10 s"
b11 =
b11 I"
b11 a"
b11 u"
b0 Q
b0 +"
b0 v"
b1100 F
b1100 ("
b1100 F"
b1100 y"
0`
b1100000010000000100011 N
b1100000010000000100011 ##
b1100000010000000100011 @#
b10000 E
b10000 o"
b10000 $#
#570
b10100 !
b10100 D
b10100 !#
b10100 1#
b10100 5#
b10100 S#
b10001000000011 "
b10001000000011 M
b10001000000011 "#
b10001000000011 T#
b101 6
b101 T"
b101 Y"
b101 >#
b101 J#
03"
11"
04"
12"
10"
05"
b1010 V
b1010 ,"
b1010 ."
b1010 E"
b1010 X"
b10 j
b10 ?"
b10 d"
b10 B"
b0 l
b0 $"
b0 *"
b1100 ?
b1100 8#
#580
b11000 @
b11000 4#
b11000 6#
b101 Y
b101 )"
b101 /"
b101 S"
b1010 l
b1010 $"
b1010 *"
b0 u
b0 v
b0 p
b0 q
b0 o
17"
#590
b0 j
b0 ?"
b0 d"
b0 B"
b11000 C
b11000 0#
b11000 3#
b101 m
b101 %"
b101 '"
b1 u
b1 v
b1010 p
b1010 q
b1010 o
1_
04
b100 O
b100 ="
b100 ?#
b10 e
b10 >"
b10 e"
b10 K
b10 <"
b10 i"
b110 H
b110 ;"
b110 j"
#600
b1111 p
b1111 q
b1010000000000 w
0)
#610
b1111 i
b1111 &"
b1111 C"
b11111111111111111111111111111011 r
b1111 ""
#620
b101 x
b101 y
b110010 }
#650
1)
#660
b100 P
b100 p"
b100 E#
b10 D#
b0 C#
b100 B#
b0 A#
b100 h"
b0 \"
b11 9"
b0 :#
b0 T
b0 c"
b0 g"
b10001000000011 N
b10001000000011 ##
b10001000000011 @#
b10100 E
b10100 o"
b10100 $#
b0 X
b0 R"
b0 s"
b10 L
b10 H"
b10 w"
b10 f
b10 -"
b10 r"
b110 I
b110 G"
b110 x"
b0 =
b0 I"
b0 a"
b0 u"
b10000 F
b10000 ("
b10000 F"
b10000 y"
1`
05
b1010 %
b1010 .
b1010 N#
b1010 \
b1010 O"
b1111 '
b1111 -
b1111 K#
b1111 h
b1111 J"
b1111 Q"
b1111 V"
b1111 %#
b1100 B
b1100 N"
b1100 '#
b1100 7#
b11 <
b11 K"
b11 `"
b11 &#
b10 ;
b10 +#
b10 =#
b1010 g
b1010 *#
b1010 G#
b1000 >
b1000 -#
b1000 H#
#670
b11000 !
b11000 D
b11000 !#
b11000 1#
b11000 5#
b11000 S#
b1000100000001010110011 "
b1000100000001010110011 M
b1000100000001010110011 "#
b1000100000001010110011 T#
b0 l
b0 $"
b0 *"
b1111 V
b1111 ,"
b1111 ."
b1111 E"
b1111 X"
b1010 6
b1010 T"
b1010 Y"
b1010 >#
b1010 J#
b0 Y
b0 )"
b0 /"
b0 S"
b10000 ?
b10000 8#
#680
b11100 @
b11100 4#
b11100 6#
b101 t
b101 s
b101 w
b0 u
b0 v
b101 p
b101 q
b0 m
b0 %"
b0 '"
b0 o
#690
b0 P
b0 p"
b0 E#
b11100 C
b11100 0#
b11100 3#
b0 p
b0 q
b0 t
b0 s
b0 w
14
b10 O
b10 ="
b10 ?#
b0 9
b0 :"
b0 l"
b10 H
b10 ;"
b10 j"
b1010 K
b1010 <"
b1010 i"
#700
b0 i
b0 &"
b0 C"
b0 r
b0 ""
b0 x
b0 y
b0 }
0)
#750
1)
#760
1k"
1}"
1/#
1S
1R
1^"
1]"
b0 W
b0 b"
b0 f"
b10 P
b10 p"
b10 E#
b1000100000 D#
b10 C#
b101 B#
b10 A#
b101 h"
b10 \"
b100 ["
b0 6"
b0 @"
b110011 9"
b10 :#
b100 9#
b11 ;
b11 +#
b11 =#
b1111 g
b1111 *#
b1111 G#
b1100 >
b1100 -#
b1100 H#
b110 #
b110 0
b110 M#
b110 G
b110 M"
b10 $
b10 /
b10 L#
b10 J
b10 L"
b1111 %
b1111 .
b1111 N#
b1111 \
b1111 O"
b0 '
b0 -
b0 K#
b0 h
b0 J"
b0 Q"
b0 V"
b0 %#
b10000 B
b10000 N"
b10000 '#
b10000 7#
b0 <
b0 K"
b0 `"
b0 &#
03
b0 U
b0 W"
b0 t"
b0 :
b0 D"
b0 |"
b1010 L
b1010 H"
b1010 w"
b10 I
b10 G"
b10 x"
b100 =
b100 I"
b100 a"
b100 u"
b10100 F
b10100 ("
b10100 F"
b10100 y"
15
b1000100000001010110011 N
b1000100000001010110011 ##
b1000100000001010110011 @#
b11000 E
b11000 o"
b11000 $#
#770
b11100 !
b11100 D
b11100 !#
b11100 1#
b11100 5#
b11100 S#
bx "
bx M
bx "#
bx T#
b1111 6
b1111 T"
b1111 Y"
b1111 >#
b1111 J#
13"
01"
14"
02"
00"
15"
b0 V
b0 ,"
b0 ."
b0 E"
b0 X"
b1010 ]
b1010 m"
b1010 <#
b10100 ?
b10100 8#
#780
b100000 @
b100000 4#
b100000 6#
07"
#790
b0 P
b0 p"
b0 E#
b100000 C
b100000 0#
b100000 3#
0_
b0 H
b0 ;"
b0 j"
b0 e
b0 >"
b0 e"
b0xxx O
b0xxx ="
b0xxx ?#
b1 9
b1 :"
b1 l"
b0 K
b0 <"
b0 i"
#800
1Q#
0)
#850
1)
#860
0}"
0/#
0k"
b10 W
b10 b"
b10 f"
0^"
0]"
1_"
0R
0S
b0 L
b0 H"
b0 w"
b0 f
b0 -"
b0 r"
b0 I
b0 G"
b0 x"
b0 =
b0 I"
b0 a"
b0 u"
b0 F
b0 ("
b0 F"
b0 y"
0`
05
b0 8
b0 P"
b0 (#
b10 #
b10 0
b10 M#
b10 G
b10 M"
b1010 $
b1010 /
b1010 L#
b1010 J
b1010 L"
b0 %
b0 .
b0 N#
b0 \
b0 O"
b10100 B
b10100 N"
b10100 '#
b10100 7#
b100 <
b100 K"
b100 `"
b100 &#
13
b0 ;
b0 +#
b0 =#
b0 g
b0 *#
b0 G#
b10000 >
b10000 -#
b10000 H#
02
#870
b0 6
b0 T"
b0 Y"
b0 >#
b0 J#
b11000 ?
b11000 8#
#900
0Q#
1O#
0)
#920
b1111 &
b1111 [
b1111 )#
b1111 P#
#950
1)
#960
0_"
b0 W
b0 b"
b0 f"
bx D#
bx C#
bx B#
bx A#
bx h"
bx \"
bx ["
bx 8"
bx 6"
bx @"
bx 9"
bx :#
bx 9#
b0 7
b0 .#
b0 I#
b100 ;
b100 +#
b100 =#
b1111 Z
b1111 ,#
b1111 F#
b10100 >
b10100 -#
b10100 H#
12
b0 #
b0 0
b0 M#
b0 G
b0 M"
b0 $
b0 /
b0 L#
b0 J
b0 L"
b0 B
b0 N"
b0 '#
b0 7#
b0 <
b0 K"
b0 `"
b0 &#
03
b10 X
b10 R"
b10 s"
b1 :
b1 D"
b1 |"
b101 =
b101 I"
b101 a"
b101 u"
b1010 ^
b1010 Z"
b1010 {"
b11000 F
b11000 ("
b11000 F"
b11000 y"
15
bx N
bx ##
bx @#
b11100 E
b11100 o"
b11100 $#
#970
b100000 !
b100000 D
b100000 !#
b100000 1#
b100000 5#
b100000 S#
b0xxx j
b0xxx ?"
b0xxx d"
bx B"
b1111 6
b1111 T"
b1111 Y"
b1111 >#
b1111 J#
03"
11"
04"
12"
10"
05"
b1010 V
b1010 ,"
b1010 ."
b1010 E"
b1010 X"
bx ]
bx m"
bx <#
bx a
bx n"
bx ;#
b100 ?
b100 8#
#980
b100100 @
b100100 4#
b100100 6#
13"
01"
14"
02"
b1111 Y
b1111 )"
b1111 /"
b1111 S"
b1010 l
b1010 $"
b1010 *"
x7"
#990
b100100 C
b100100 0#
b100100 3#
b1111 m
b1111 %"
b1111 '"
b1 u
b1 v
b1010 p
b1010 q
b1010 o
x4
bx O
bx ="
bx ?#
bx j
bx ?"
bx d"
bx e
bx >"
bx e"
xc
x_
bx 9
bx :"
bx l"
bx H
bx ;"
bx j"
bx K
bx <"
bx i"
#1000
0O#
b0 u
b0 v
b1010 n
b1111 p
b101 q
b11110000000000 w
0)
#1010
b11001 i
b11001 &"
b11001 C"
b101 r
b11001 ""
#1020
b101 x
b101 y
b1 ~
b1 !"
b10010110 }
#1050
1)
#1060
x^"
x]"
b0 i
b0 &"
b0 C"
b100000 E
b100000 o"
b100000 $#
b0 X
b0 R"
b0 s"
bx :
bx D"
bx |"
bx L
bx H"
bx w"
bx f
bx -"
bx r"
bx I
bx G"
bx x"
bx k
bx #"
bx q"
bx =
bx I"
bx a"
bx u"
bx ^
bx Z"
bx {"
bx b
bx U"
bx z"
b11100 F
b11100 ("
b11100 F"
b11100 y"
x`
xd
x5
b1 8
b1 P"
b1 (#
b1010 %
b1010 .
b1010 N#
b1010 \
b1010 O"
b11001 '
b11001 -
b11001 K#
b11001 h
b11001 J"
b11001 Q"
b11001 V"
b11001 %#
b11000 B
b11000 N"
b11000 '#
b11000 7#
b101 <
b101 K"
b101 `"
b101 &#
13
b0 ;
b0 +#
b0 =#
b0 >
b0 -#
b0 H#
02
#1070
b100100 !
b100100 D
b100100 !#
b100100 1#
b100100 5#
b100100 S#
b0x0x0 l
b0x0x0 $"
b0x0x0 *"
b0x11xx m
b0x11xx %"
b0x11xx '"
bx Y
bx )"
bx /"
bx S"
x3"
x1"
x4"
x2"
x0"
x5"
bx V
bx ,"
bx ."
bx E"
bx X"
b11100 ?
b11100 8#
#1080
b101000 @
b101000 4#
b101000 6#
bx t
bx s
b0x u
b0x v
b0x0x0 n
b0x11xx p
b0xx1xx q
bx m
bx %"
bx '"
bx l
bx $"
bx *"
b0x0x0 o
bx w
#1090
b101000 C
b101000 0#
b101000 3#
bx n
bx p
bx q
bx o
bx r
bx ""
#1100
bx z
bx {
bx |
bx x
bx y
bx ~
bx !"
bx }
0)
#1150
1)
#1160
x_"
b1 7
b1 .#
b1 I#
b101 ;
b101 +#
b101 =#
b11001 g
b11001 *#
b11001 G#
b11000 >
b11000 -#
b11000 H#
12
bx 8
bx P"
bx (#
bx #
bx 0
bx M#
bx G
bx M"
bx $
bx /
bx L#
bx J
bx L"
bx %
bx .
bx N#
bx \
bx O"
b0 '
b0 -
b0 K#
b0 h
b0 J"
b0 Q"
b0 V"
b0 %#
b11100 B
b11100 N"
b11100 '#
b11100 7#
bx <
bx K"
bx `"
bx &#
x3
b100000 F
b100000 ("
b100000 F"
b100000 y"
b100100 E
b100100 o"
b100100 $#
#1170
b101000 !
b101000 D
b101000 !#
b101000 1#
b101000 5#
b101000 S#
b11001 6
b11001 T"
b11001 Y"
b11001 >#
b11001 J#
b100000 ?
b100000 8#
#1180
b101100 @
b101100 4#
b101100 6#
#1190
b101100 C
b101100 0#
b101100 3#
#1200
xQ#
xO#
0)
#1250
1)
#1260
b101000 E
b101000 o"
b101000 $#
b100100 F
b100100 ("
b100100 F"
b100100 y"
b100000 B
b100000 N"
b100000 '#
b100000 7#
bx 7
bx .#
bx I#
bx ;
bx +#
bx =#
b0 g
b0 *#
b0 G#
b11100 >
b11100 -#
b11100 H#
x2
#1270
b101100 !
b101100 D
b101100 !#
b101100 1#
b101100 5#
b101100 S#
b0xxxxx 6
b0xxxxx T"
b0xxxxx Y"
b0xxxxx >#
b0xxxxx J#
b100100 ?
b100100 8#
#1280
b110000 @
b110000 4#
b110000 6#
#1290
b110000 C
b110000 0#
b110000 3#
#1300
0)
